#Recipe 1. Exporting graphs in high resolution image formats: PNG, JPEG, BMP, TIFF


png("cars.png",res=200,height=600,width=600)

plot(cars$dist~cars$speed,
main="Relationship between car distance and speed",
xlab="Speed (miles per hour)",
ylab="Distance travelled (miles)",
xlim=c(0,30),
ylim=c(0,140),
xaxs="i",
yaxs="i",
col="red",
pch=19)

dev.off()


png("cars.png",res=200,height=600,width=600)

par(mar=c(4,4,3,1),omi=c(0.1,0.1,0.1,0.1),mgp=c(3,0.5,0),
	 las=1,mex=0.5,
	 cex.main=0.6,cex.lab=0.5,cex.axis=0.5)

plot(cars$dist~cars$speed,
main="Relationship between car distance and speed",
xlab="Speed (miles per hour)",
ylab="Distance travelled (miles)",
xlim=c(0,30),
ylim=c(0,140),
xaxs="i",
yaxs="i",
col="red",
pch=19,
cex=0.5)

dev.off()


#Recipe 2. Exporting graphs in vector formats: SVG, PDF, PS

pdf("cars.pdf")

plot(cars$dist~cars$speed,
main="Relationship between car distance and speed",
xlab="Speed (miles per hour)",
ylab="Distance travelled (miles)",
xlim=c(0,30),
ylim=c(0,140),
xaxs="i",
yaxs="i",
col="red",
pch=19,
cex=0.5)

dev.off()


svg("3067_10_03.svg")
#plot command here
dev.off()

postscript("3067_10_03.ps")
#plot command here
dev.off()


#Exporting to SVG for Windows users
install.packages("Cairo")
library(Cairo)
CairoSVG("3067_10_03.svg")
#plot command here
dev.off()


pdf("multiple.pdf")

for(i in 1:3)
  plot(cars,pch=19,col=i)

dev.off()



pdf("multiple.pdf",colormodel=”cmyk”)

for(i in 1:3)
  plot(cars,pch=19,col=i)

dev.off()




#Recipe 3. Adding Mathematical and scientific notations (typesetting)

plot(air,las=1,
main=expression(paste("Relationship between ",PM[10]," and ",NO[X])),
xlab=expression(paste(NO[X]," concentrations (",mu*g^-3,")")),
ylab=expression(paste(PM[10]," concentrations (",mu*g^-3,")")))


demo(plotmath)


#Recipe 4. Adding text descriptions to graphs


par(mar=c(12,4,3,2))
plot(rnorm(1000),main="Random Normal Distribution")

desc<-expression(paste("The normal distribution has density ",
f(x) == frac(1,sqrt(2*pi)*sigma)~ plain(e)^frac(-(x-mu)^2,2*sigma^2)))

mtext(desc,side=1,line=4,padj=1,adj=0)

mtext(expression(paste("where ", mu, " is the mean of the distribution and ",sigma," the standard deviation.")),side=1,line=7,padj=1,adj=0)



dailysales<-read.csv("dailysales.csv")

par(mar=c(5,5,12,2))

plot(units~as.Date(date,"%d/%m/%y"),data=dailysales,type="l",las=1,ylab="Units Sold",xlab="Date")

desc<-"The graph below shows sales data for Product A in the month of January 2010. There were a lot of ups and downs in the number of units sold. The average number of units sold was around 5000. The highest sales were recorded on the 27th January, nearly 7000 units sold."

mtext(paste(strwrap(desc,width=80),collapse="\n"),side=3,line=3,padj=0,adj=0)

title("Daily Sales Trends",line=10,adj=0,font=2)



#Recipe 5. Using Graph Templates

themeplot<-function(x,theme,...) {
  i<-which(themes$theme==theme)
  par(bg=as.character(themes[i,]$bg_color),las=1)

  plot(x,type="n",...)
  
  u<-par("usr")
  plotcol=as.character(themes[i,]$plot_color)
  rect(u[1],u[3],u[2],u[4],col=plotcol,border=plotcol)
  
  points(x,col=as.character(themes[i,]$symbol_color),...)
  box()
}

themeplot(rnorm(1000),theme="white",pch=21,main="White")
themeplot(rnorm(1000),theme="lightgray",pch=21,main="Light Gray")
themeplot(rnorm(1000),theme="dark",pch=21,main="Dark")
themeplot(rnorm(1000),theme="pink",pch=21,main="Pink")






#Recipe 6. Choosing font families and styles under Windows, OS X and Linux

par(mar=c(1,1,5,1))
plot(1:200,type="n",main="Fonts under Windows",axes=FALSE,xlab="",ylab="")

text(0,180,"Arial \n(family=\"sans\", font=1)", 
	  family="sans",font=1,adj=0)
text(0,140,"Arial Bold \n(family=\"sans\", font=2)", 
	  family="sans",font=2,adj=0)
text(0,100,"Arial Italic \n(family=\"sans\", font=3)", 
	  family="sans",font=3,adj=0)
text(0,60,"Arial Bold Italic \n(family=\"sans\", font=4)", 
	  family="sans",font=4,adj=0)

text(70,180,"Times \n(family=\"serif\", font=1)", 
	  family="serif",font=1,adj=0)
text(70,140,"Times Bold \n(family=\"serif\", font=2)", 
	  family="serif",font=2,adj=0)
text(70,100,"Times Italic \n(family=\"serif\", font=3)", 
	  family="serif",font=3,adj=0)
text(70,60,"Times Bold Italic \n(family=\"serif\", font=4)", 
	  family="serif",font=4,adj=0)

text(130,180,"Courier New\n(family=\"mono\", font=1)",
	  family="mono",font=1,adj=0)
text(130,140,"Courier New Bold \n(family=\"mono\", font=2)", 
	  family="mono",font=2,adj=0)
text(130,100,"Courier New Italic \n(family=\"mono\", font=3)",
	  family="mono",font=3,adj=0)
text(130,60,"Courier New Bold Italic \n(family=\"mono\", font=4)", 
	  family="mono",font=4,adj=0)



windowsFonts(GE = windowsFont("Georgia"))

text(150,80,"Georgia",family="GE")


#Recipe 7. Choosing fonts for PostScripts and PDFs

pdf("fonts.pdf",family="AvantGarde")
plot(rnorm(100),main="Random Normal Distribution")
dev.off()


postscript("fonts.ps",family="AvantGarde")
plot(rnorm(100),main="Random Normal Distribution")
dev.off()


names(pdfFonts())

