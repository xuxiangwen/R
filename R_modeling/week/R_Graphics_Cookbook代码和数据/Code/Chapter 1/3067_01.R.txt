#Recipe 1. Creating scatter plots

plot(cars$dist~cars$speed)


plot(cars$dist~cars$speed, # y~x
main="Relationship between car distance & speed", #Plot Title
xlab="Speed (miles per hour)", #X axis title
ylab="Distance travelled (miles)", #Y axis title
xlim=c(0,30), #Set x axis limits from 0 to 30 ylim=c(0,140), #Set y axis limits from 0 to  30140  xaxs="i", #Set x axis style as internal 
yaxs="i", #Set y axis style as internal  
col="red", #Set the colour of plotting symbol to red 
pch=19) #Set the plotting symbol to filled dots

#Recipe 2. Creating line graphs

sales  <- read.csv("dailysales.csv",header=TRUE)

plot(sales$units~as.Date(sales$date,"%d/%m/%y"),
type="l", #Specify type of plot as l for line
main="Unit Sales in the month of January 2010",
xlab="Date",
ylab="Number of units sold",
col="blue")

lines(sales$units2~as.Date(sales$date,"%d/%m/%y"),
col="red")



#Recipe 3. Creating bar charts

sales<-read.csv("citysales.csv",header=TRUE)

#Vertical bars
barplot(sales$ProductA,
names.arg= sales$City,
col="black")

#Horizontal bars
barplot(sales$ProductA,
names.arg= sales$City,
horiz=TRUE,
col="black")

#Grouped bars with legend
barplot(as.matrix(sales[,2:4]), beside= TRUE,
legend=sales$City,
col=heat.colors(5),
border="white")

#Horizontal grouped bars with legend
barplot(as.matrix(sales[,2:4]), beside=TRUE,
legend=sales$City,
col=heat.colors(5),
border="white",
horiz=TRUE)

4. Creating histograms and density plots

hist(rnorm(1000))

hist(islands)

plot(density(rnorm(1000)))


5. Creating box plots

metals<-read.csv("metals.csv",header=TRUE)

boxplot(metals,
xlab="Metals",
ylab="Atmospheric Concentration in ng per cubic metre",
main="Atmospheric Metal Concentrations in London")

copper<-read.csv("copper_site.csv",header=TRUE)

boxplot(copper$Cu~copper$Source, 
xlab="Measurement Site",
ylab="Atmospheric Concentration of Copper in ng per cubic metre",
main="Atmospheric Copper Concentrations in London")


6. Adjusting X and Y axis limits

plot(cars$dist~cars$speed,
xlim=c(0,30),
ylim=c(0,150))


plot(cars$dist~cars$speed,
xlim=c(0,30),
ylim=c(0,150),
xaxs="i",
yaxs="i")


plot(cars$dist~cars$speed,
xlim=c(30,0),
ylim=c(0,150),
xaxs="i",
yaxs="i")


7. Creating heatmaps

heatmap(as.matrix(mtcars), 
Rowv=NA, 
Colv=NA, 
col = heat.colors(256), 
scale="column",
margins=c(2,8),
main = "Car characteristics by Model")

genes<-read.csv("genes.csv",header=T)

rownames(genes)<-colnames(genes)

image(x=1:ncol( genes),
y=1:nrow(genes),
z=t(as.matrix(genes)),
axes=FALSE,
xlab="",
ylab="" ,
main="Gene Correlation Matrix")

axis(1,at=1:ncol(genes),labels=colnames(genes),col="white",las=2,cex.axis=0.8)           
axis(2,at=1:nrow(genes),labels=rownames(genes),col="white",las=1,cex.axis=0.8)

8. Creating pairs plots

pairs(iris[,1:4])

plot(iris[,1:4],
main="Relationships between characteristics of iris flowers",
pch=19,
col="blue",
cex=0.9)


9. Creating multiple plot matrix layouts

par(mfrow=c(2,3))
plot(rnorm(100),col="blue",main="Plot No.1")
plot(rnorm(100),col="blue",main="Plot No.2")
plot(rnorm(100),col="green",main="Plot No.3")
plot(rnorm(100),col="black",main="Plot No.4")
plot(rnorm(100),col="green",main="Plot No.5")
plot(rnorm(100),col="orange",main="Plot No.6")


par(mfcol=c(2,3))
plot(rnorm(100),col="blue",main="Plot No.1")
plot(rnorm(100),col="blue",main="Plot No.2")
plot(rnorm(100),col="green",main="Plot No.3")
plot(rnorm(100),col="black",main="Plot No.4")
plot(rnorm(100),col="green",main="Plot No.5")
plot(rnorm(100),col="orange",main="Plot No.6")


market<-read.csv("dailymarket.csv",header=TRUE)

par(mfrow=c(3,1))

plot(market$revenue~as.Date(market$date,"%d/%m/%y"),
type="l", #Specify type of plot as l for line
main="Revenue",
xlab="Date",
ylab="US Dollars",
col="blue")

plot(market$profits~as.Date(market$date,"%d/%m/%y"),
type="l", #Specify type of plot as l for line
main="Profits",
xlab="Date",
ylab="US Dollars",
col="red")

plot(market$customers~as.Date(market$date,"%d/%m/%y"),
type="l", #Specify type of plot as l for line
main="Customer visits",
xlab="Date",
ylab="Number of people",
col="black")

10. Adding and formatting legends

rain<-read.csv("cityrain.csv",header=TRUE)

plot(rain$Tokyo,type="l",col="red",
ylim=c(0,300),
main="Monthly Rainfall in major cities",
xlab="Month of Year",
ylab="Rainfall (mm)",
lwd=2)
lines(rain$NewYork,type="l",col="blue",lwd=2)
lines(rain$London,type="l",col="green",lwd=2)
lines(rain$Berlin,type="l",col="orange",lwd=2) 

legend("topright",
legend=c("Tokyo","New York","London","Berlin"),
col=c("red","blue","green","orange"),
lty=1,lwd=2)


plot(rain$Tokyo,type="l",col="red",
ylim=c(0,250),
main="Monthly Rainfall in major cities",
xlab="Month of Year",
ylab="Rainfall (mm)",
lwd=2)
lines(rain$NewYork,type="l",col="blue",lwd=2)
lines(rain$London,type="l",col="green",lwd=2)
lines(rain$Berlin,type="l",col="orange",lwd=2)

legend("top",
legend=c("Tokyo","New York","London","Berlin"),
ncol=4,
cex=0.8,
bty="n",
col=c("red","blue","green","orange"),
lty=1,lwd=2)


11. Creating graphs with maps

install.packages("maps")

library(maps)

map()

map('world', fill = TRUE,col=heat.colors(10))

map("state", interior = FALSE)
map("state", boundary = FALSE, col="red", add = TRUE) 


install.packages("sp")
library(sp)

load(url("http://gadm.org/data/rda/GBR_adm1.RData"))

spplot(gadm,"Shape_Area")


12. Saving and exporting graphs

png("scatterplot.png")
plot(rnorm(1000))
dev.off()

png("scatterplot.png", height=600, width=600)
plot(rnorm(1000))
dev.off()


png("scatterplot.png", height=4, width=4,units="in")
plot(rnorm(1000))
dev.off()


png("scatterplot.png",res=600)
plot(rnorm(1000))
dev.off()

pdf("scatterplot.pdf")
plot(rnorm(1000))
dev.off()






